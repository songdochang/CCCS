//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CCCS.Web.AdService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://lacounty.gov/IADWebServices", ConfigurationName="AdService.ServiceSoap")]
    public interface ServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/Hello", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Hello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/Hello", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsValidUser", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsValidUser(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsValidUser", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsValidUserAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsVerified", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsVerified(string UserID, string DOB, string SSN, string Zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsVerified", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsVerifiedAsync(string UserID, string DOB, string SSN, string Zip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/HasPasswordResetProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool HasPasswordResetProfile(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/HasPasswordResetProfile", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> HasPasswordResetProfileAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ChangePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangePassword(string UserID, string NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ChangePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(string UserID, string NewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsAuthenticated", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsAuthenticated(string logonName, string logonPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsAuthenticated", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsAuthenticatedAsync(string logonName, string logonPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/UserSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object[] UserSearch(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/UserSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<object[]> UserSearchAsync(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GroupSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object[] GroupSearch(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GroupSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<object[]> GroupSearchAsync(string searchValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ChangeADPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeADPassword(string loginID, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ChangeADPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ChangeADPasswordAsync(string loginID, string currentPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/UserSearchReturnAttributes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet UserSearchReturnAttributes(string searchValue, string[] attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/UserSearchReturnAttributes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> UserSearchReturnAttributesAsync(string searchValue, string[] attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/FilteredUserSearchReturnAttributes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FilteredUserSearchReturnAttributes(string searchFilter, string searchValue, string[] attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/FilteredUserSearchReturnAttributes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> FilteredUserSearchReturnAttributesAsync(string searchFilter, string searchValue, string[] attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/CustomUserSearchReturnAttributes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet CustomUserSearchReturnAttributes(string searchFilter, string[] attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/CustomUserSearchReturnAttributes", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> CustomUserSearchReturnAttributesAsync(string searchFilter, string[] attributes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsValidIdNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsValidIdNumber(string a_IdNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsValidIdNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsValidIdNumberAsync(string a_IdNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsValidTicketNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsValidTicketNumber(string a_TicketNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsValidTicketNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsValidTicketNumberAsync(string a_TicketNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ResetAdPassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ResetAdPassword(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ResetAdPassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ResetAdPasswordAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ResetMainFramePassword", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ResetMainFramePassword(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ResetMainFramePassword", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ResetMainFramePasswordAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ResetSecurId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ResetSecurId(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ResetSecurId", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ResetSecurIdAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ChangeFleetPIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ChangeFleetPIN(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode, string a_NewPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ChangeFleetPIN", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ChangeFleetPINAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode, string a_NewPIN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsValidUnitNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsValidUnitNumber(string UnitNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsValidUnitNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsValidUnitNumberAsync(string UnitNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/UpdateUnitMeter", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateUnitMeter(string UnitNumber, string Meter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/UpdateUnitMeter", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateUnitMeterAsync(string UnitNumber, string Meter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetTokenIds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetTokenIds(string a_IdNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetTokenIds", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetTokenIdsAsync(string a_IdNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsAccountLockedOut", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsAccountLockedOut(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsAccountLockedOut", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsAccountLockedOutAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsAccountDisabled", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsAccountDisabled(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsAccountDisabled", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsAccountDisabledAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsAccountExpired", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsAccountExpired(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsAccountExpired", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsAccountExpiredAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsPasswordExpired", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool IsPasswordExpired(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/IsPasswordExpired", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> IsPasswordExpiredAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/AccountExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AccountExists(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/AccountExists", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AccountExistsAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/PasswordExirationDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime PasswordExirationDate(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/PasswordExirationDate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.DateTime> PasswordExirationDateAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetGroupMemberships", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object[] GetGroupMemberships(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetGroupMemberships", ReplyAction="*")]
        System.Threading.Tasks.Task<object[]> GetGroupMembershipsAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetMemberOf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        object[] GetMemberOf(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetMemberOf", ReplyAction="*")]
        System.Threading.Tasks.Task<object[]> GetMemberOfAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ClearMemberOf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool ClearMemberOf(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/ClearMemberOf", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ClearMemberOfAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetUserProfile", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CCCS.Web.AdService.UserObject GetUserProfile(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetUserProfile", ReplyAction="*")]
        System.Threading.Tasks.Task<CCCS.Web.AdService.UserObject> GetUserProfileAsync(string loginID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/LACUserSearch", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable LACUserSearch(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/LACUserSearch", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> LACUserSearchAsync(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/CreateHomeFolder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool CreateHomeFolder(string folderPath, string userPrincipalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/CreateHomeFolder", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> CreateHomeFolderAsync(string folderPath, string userPrincipalName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/RemoveHomeFolderPermission", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool RemoveHomeFolderPermission(string folderPath, string identity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/RemoveHomeFolderPermission", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> RemoveHomeFolderPermissionAsync(string folderPath, string identity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetMappings", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetMappings(int deptno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetMappings", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetMappingsAsync(int deptno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/UnlockADAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UnlockADAccount(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/UnlockADAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UnlockADAccountAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetUserProvisioningRule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetUserProvisioningRule(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetUserProvisioningRule", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUserProvisioningRuleAsync(string UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetMembers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetMembers(string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetMembers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetMembersAsync(string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetUserProfileByDN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CCCS.Web.AdService.UserObject GetUserProfileByDN(string DN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetUserProfileByDN", ReplyAction="*")]
        System.Threading.Tasks.Task<CCCS.Web.AdService.UserObject> GetUserProfileByDNAsync(string DN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetUserProfileByUPN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        CCCS.Web.AdService.UserObject GetUserProfileByUPN(string UPN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/GetUserProfileByUPN", ReplyAction="*")]
        System.Threading.Tasks.Task<CCCS.Web.AdService.UserObject> GetUserProfileByUPNAsync(string UPN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/AddLogEntry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void AddLogEntry(string method, string message, string objectGUID, string userID, string soure, bool status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://lacounty.gov/IADWebServices/AddLogEntry", ReplyAction="*")]
        System.Threading.Tasks.Task AddLogEntryAsync(string method, string message, string objectGUID, string userID, string soure, bool status);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://lacounty.gov/IADWebServices")]
    public partial class UserObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string givenNameField;
        
        private string snField;
        
        private string displayNameField;
        
        private string telephoneNumberField;
        
        private string mailField;
        
        private string departmentField;
        
        private string divisionField;
        
        private string titleField;
        
        private string managerField;
        
        private string streetAddressField;
        
        private string lField;
        
        private string stField;
        
        private string postalCodeField;
        
        private object[] memberOfField;
        
        private string employeeIDField;
        
        private string physicalDeliveryOfficeNameField;
        
        private bool isAccountDisabledField;
        
        private bool isAccountExpiredField;
        
        private bool isAccountLockedOutField;
        
        private bool isPasswordExpiredField;
        
        private System.DateTime accountExpireDateField;
        
        private System.DateTime passwordExpireDateField;
        
        private string countryCodeField;
        
        private string homeUnitCodeField;
        
        private string gUIDField;
        
        private System.DateTime whenCreatedField;
        
        private string userPrincipalNameField;
        
        private string msDSPrincipalNameField;
        
        private string titleCodeField;
        
        private string locationCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string givenName {
            get {
                return this.givenNameField;
            }
            set {
                this.givenNameField = value;
                this.RaisePropertyChanged("givenName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string sn {
            get {
                return this.snField;
            }
            set {
                this.snField = value;
                this.RaisePropertyChanged("sn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string displayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("displayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string telephoneNumber {
            get {
                return this.telephoneNumberField;
            }
            set {
                this.telephoneNumberField = value;
                this.RaisePropertyChanged("telephoneNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
                this.RaisePropertyChanged("mail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
                this.RaisePropertyChanged("department");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string division {
            get {
                return this.divisionField;
            }
            set {
                this.divisionField = value;
                this.RaisePropertyChanged("division");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string manager {
            get {
                return this.managerField;
            }
            set {
                this.managerField = value;
                this.RaisePropertyChanged("manager");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string streetAddress {
            get {
                return this.streetAddressField;
            }
            set {
                this.streetAddressField = value;
                this.RaisePropertyChanged("streetAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string l {
            get {
                return this.lField;
            }
            set {
                this.lField = value;
                this.RaisePropertyChanged("l");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string st {
            get {
                return this.stField;
            }
            set {
                this.stField = value;
                this.RaisePropertyChanged("st");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string postalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("postalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=13)]
        public object[] memberOf {
            get {
                return this.memberOfField;
            }
            set {
                this.memberOfField = value;
                this.RaisePropertyChanged("memberOf");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string employeeID {
            get {
                return this.employeeIDField;
            }
            set {
                this.employeeIDField = value;
                this.RaisePropertyChanged("employeeID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string physicalDeliveryOfficeName {
            get {
                return this.physicalDeliveryOfficeNameField;
            }
            set {
                this.physicalDeliveryOfficeNameField = value;
                this.RaisePropertyChanged("physicalDeliveryOfficeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public bool isAccountDisabled {
            get {
                return this.isAccountDisabledField;
            }
            set {
                this.isAccountDisabledField = value;
                this.RaisePropertyChanged("isAccountDisabled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public bool isAccountExpired {
            get {
                return this.isAccountExpiredField;
            }
            set {
                this.isAccountExpiredField = value;
                this.RaisePropertyChanged("isAccountExpired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public bool isAccountLockedOut {
            get {
                return this.isAccountLockedOutField;
            }
            set {
                this.isAccountLockedOutField = value;
                this.RaisePropertyChanged("isAccountLockedOut");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public bool isPasswordExpired {
            get {
                return this.isPasswordExpiredField;
            }
            set {
                this.isPasswordExpiredField = value;
                this.RaisePropertyChanged("isPasswordExpired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public System.DateTime accountExpireDate {
            get {
                return this.accountExpireDateField;
            }
            set {
                this.accountExpireDateField = value;
                this.RaisePropertyChanged("accountExpireDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public System.DateTime passwordExpireDate {
            get {
                return this.passwordExpireDateField;
            }
            set {
                this.passwordExpireDateField = value;
                this.RaisePropertyChanged("passwordExpireDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("countryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string homeUnitCode {
            get {
                return this.homeUnitCodeField;
            }
            set {
                this.homeUnitCodeField = value;
                this.RaisePropertyChanged("homeUnitCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
                this.RaisePropertyChanged("GUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public System.DateTime whenCreated {
            get {
                return this.whenCreatedField;
            }
            set {
                this.whenCreatedField = value;
                this.RaisePropertyChanged("whenCreated");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string userPrincipalName {
            get {
                return this.userPrincipalNameField;
            }
            set {
                this.userPrincipalNameField = value;
                this.RaisePropertyChanged("userPrincipalName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string msDSPrincipalName {
            get {
                return this.msDSPrincipalNameField;
            }
            set {
                this.msDSPrincipalNameField = value;
                this.RaisePropertyChanged("msDSPrincipalName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string titleCode {
            get {
                return this.titleCodeField;
            }
            set {
                this.titleCodeField = value;
                this.RaisePropertyChanged("titleCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string locationCode {
            get {
                return this.locationCodeField;
            }
            set {
                this.locationCodeField = value;
                this.RaisePropertyChanged("locationCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceSoapChannel : CCCS.Web.AdService.ServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceSoapClient : System.ServiceModel.ClientBase<CCCS.Web.AdService.ServiceSoap>, CCCS.Web.AdService.ServiceSoap {
        
        public ServiceSoapClient() {
        }
        
        public ServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Hello() {
            return base.Channel.Hello();
        }
        
        public System.Threading.Tasks.Task<string> HelloAsync() {
            return base.Channel.HelloAsync();
        }
        
        public bool IsValidUser(string UserID) {
            return base.Channel.IsValidUser(UserID);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidUserAsync(string UserID) {
            return base.Channel.IsValidUserAsync(UserID);
        }
        
        public bool IsVerified(string UserID, string DOB, string SSN, string Zip) {
            return base.Channel.IsVerified(UserID, DOB, SSN, Zip);
        }
        
        public System.Threading.Tasks.Task<bool> IsVerifiedAsync(string UserID, string DOB, string SSN, string Zip) {
            return base.Channel.IsVerifiedAsync(UserID, DOB, SSN, Zip);
        }
        
        public bool HasPasswordResetProfile(string UserID) {
            return base.Channel.HasPasswordResetProfile(UserID);
        }
        
        public System.Threading.Tasks.Task<bool> HasPasswordResetProfileAsync(string UserID) {
            return base.Channel.HasPasswordResetProfileAsync(UserID);
        }
        
        public bool ChangePassword(string UserID, string NewPassword) {
            return base.Channel.ChangePassword(UserID, NewPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(string UserID, string NewPassword) {
            return base.Channel.ChangePasswordAsync(UserID, NewPassword);
        }
        
        public bool IsAuthenticated(string logonName, string logonPass) {
            return base.Channel.IsAuthenticated(logonName, logonPass);
        }
        
        public System.Threading.Tasks.Task<bool> IsAuthenticatedAsync(string logonName, string logonPass) {
            return base.Channel.IsAuthenticatedAsync(logonName, logonPass);
        }
        
        public object[] UserSearch(string searchValue) {
            return base.Channel.UserSearch(searchValue);
        }
        
        public System.Threading.Tasks.Task<object[]> UserSearchAsync(string searchValue) {
            return base.Channel.UserSearchAsync(searchValue);
        }
        
        public object[] GroupSearch(string searchValue) {
            return base.Channel.GroupSearch(searchValue);
        }
        
        public System.Threading.Tasks.Task<object[]> GroupSearchAsync(string searchValue) {
            return base.Channel.GroupSearchAsync(searchValue);
        }
        
        public bool ChangeADPassword(string loginID, string currentPassword, string newPassword) {
            return base.Channel.ChangeADPassword(loginID, currentPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeADPasswordAsync(string loginID, string currentPassword, string newPassword) {
            return base.Channel.ChangeADPasswordAsync(loginID, currentPassword, newPassword);
        }
        
        public System.Data.DataSet UserSearchReturnAttributes(string searchValue, string[] attributes) {
            return base.Channel.UserSearchReturnAttributes(searchValue, attributes);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> UserSearchReturnAttributesAsync(string searchValue, string[] attributes) {
            return base.Channel.UserSearchReturnAttributesAsync(searchValue, attributes);
        }
        
        public System.Data.DataSet FilteredUserSearchReturnAttributes(string searchFilter, string searchValue, string[] attributes) {
            return base.Channel.FilteredUserSearchReturnAttributes(searchFilter, searchValue, attributes);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> FilteredUserSearchReturnAttributesAsync(string searchFilter, string searchValue, string[] attributes) {
            return base.Channel.FilteredUserSearchReturnAttributesAsync(searchFilter, searchValue, attributes);
        }
        
        public System.Data.DataSet CustomUserSearchReturnAttributes(string searchFilter, string[] attributes) {
            return base.Channel.CustomUserSearchReturnAttributes(searchFilter, attributes);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> CustomUserSearchReturnAttributesAsync(string searchFilter, string[] attributes) {
            return base.Channel.CustomUserSearchReturnAttributesAsync(searchFilter, attributes);
        }
        
        public bool IsValidIdNumber(string a_IdNumber) {
            return base.Channel.IsValidIdNumber(a_IdNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidIdNumberAsync(string a_IdNumber) {
            return base.Channel.IsValidIdNumberAsync(a_IdNumber);
        }
        
        public bool IsValidTicketNumber(string a_TicketNumber) {
            return base.Channel.IsValidTicketNumber(a_TicketNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidTicketNumberAsync(string a_TicketNumber) {
            return base.Channel.IsValidTicketNumberAsync(a_TicketNumber);
        }
        
        public bool ResetAdPassword(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode) {
            return base.Channel.ResetAdPassword(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode);
        }
        
        public System.Threading.Tasks.Task<bool> ResetAdPasswordAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode) {
            return base.Channel.ResetAdPasswordAsync(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode);
        }
        
        public bool ResetMainFramePassword(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode) {
            return base.Channel.ResetMainFramePassword(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode);
        }
        
        public System.Threading.Tasks.Task<bool> ResetMainFramePasswordAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode) {
            return base.Channel.ResetMainFramePasswordAsync(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode);
        }
        
        public bool ResetSecurId(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode) {
            return base.Channel.ResetSecurId(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode);
        }
        
        public System.Threading.Tasks.Task<bool> ResetSecurIdAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode) {
            return base.Channel.ResetSecurIdAsync(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode);
        }
        
        public bool ChangeFleetPIN(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode, string a_NewPIN) {
            return base.Channel.ChangeFleetPIN(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode, a_NewPIN);
        }
        
        public System.Threading.Tasks.Task<bool> ChangeFleetPINAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode, string a_NewPIN) {
            return base.Channel.ChangeFleetPINAsync(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode, a_NewPIN);
        }
        
        public bool IsValidUnitNumber(string UnitNumber) {
            return base.Channel.IsValidUnitNumber(UnitNumber);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidUnitNumberAsync(string UnitNumber) {
            return base.Channel.IsValidUnitNumberAsync(UnitNumber);
        }
        
        public bool UpdateUnitMeter(string UnitNumber, string Meter) {
            return base.Channel.UpdateUnitMeter(UnitNumber, Meter);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUnitMeterAsync(string UnitNumber, string Meter) {
            return base.Channel.UpdateUnitMeterAsync(UnitNumber, Meter);
        }
        
        public string GetTokenIds(string a_IdNumber) {
            return base.Channel.GetTokenIds(a_IdNumber);
        }
        
        public System.Threading.Tasks.Task<string> GetTokenIdsAsync(string a_IdNumber) {
            return base.Channel.GetTokenIdsAsync(a_IdNumber);
        }
        
        public bool IsAccountLockedOut(string loginID) {
            return base.Channel.IsAccountLockedOut(loginID);
        }
        
        public System.Threading.Tasks.Task<bool> IsAccountLockedOutAsync(string loginID) {
            return base.Channel.IsAccountLockedOutAsync(loginID);
        }
        
        public bool IsAccountDisabled(string loginID) {
            return base.Channel.IsAccountDisabled(loginID);
        }
        
        public System.Threading.Tasks.Task<bool> IsAccountDisabledAsync(string loginID) {
            return base.Channel.IsAccountDisabledAsync(loginID);
        }
        
        public bool IsAccountExpired(string loginID) {
            return base.Channel.IsAccountExpired(loginID);
        }
        
        public System.Threading.Tasks.Task<bool> IsAccountExpiredAsync(string loginID) {
            return base.Channel.IsAccountExpiredAsync(loginID);
        }
        
        public bool IsPasswordExpired(string loginID) {
            return base.Channel.IsPasswordExpired(loginID);
        }
        
        public System.Threading.Tasks.Task<bool> IsPasswordExpiredAsync(string loginID) {
            return base.Channel.IsPasswordExpiredAsync(loginID);
        }
        
        public bool AccountExists(string loginID) {
            return base.Channel.AccountExists(loginID);
        }
        
        public System.Threading.Tasks.Task<bool> AccountExistsAsync(string loginID) {
            return base.Channel.AccountExistsAsync(loginID);
        }
        
        public System.DateTime PasswordExirationDate(string loginID) {
            return base.Channel.PasswordExirationDate(loginID);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> PasswordExirationDateAsync(string loginID) {
            return base.Channel.PasswordExirationDateAsync(loginID);
        }
        
        public object[] GetGroupMemberships(string loginID) {
            return base.Channel.GetGroupMemberships(loginID);
        }
        
        public System.Threading.Tasks.Task<object[]> GetGroupMembershipsAsync(string loginID) {
            return base.Channel.GetGroupMembershipsAsync(loginID);
        }
        
        public object[] GetMemberOf(string loginID) {
            return base.Channel.GetMemberOf(loginID);
        }
        
        public System.Threading.Tasks.Task<object[]> GetMemberOfAsync(string loginID) {
            return base.Channel.GetMemberOfAsync(loginID);
        }
        
        public bool ClearMemberOf(string loginID) {
            return base.Channel.ClearMemberOf(loginID);
        }
        
        public System.Threading.Tasks.Task<bool> ClearMemberOfAsync(string loginID) {
            return base.Channel.ClearMemberOfAsync(loginID);
        }
        
        public CCCS.Web.AdService.UserObject GetUserProfile(string loginID) {
            return base.Channel.GetUserProfile(loginID);
        }
        
        public System.Threading.Tasks.Task<CCCS.Web.AdService.UserObject> GetUserProfileAsync(string loginID) {
            return base.Channel.GetUserProfileAsync(loginID);
        }
        
        public System.Data.DataTable LACUserSearch(string searchString) {
            return base.Channel.LACUserSearch(searchString);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> LACUserSearchAsync(string searchString) {
            return base.Channel.LACUserSearchAsync(searchString);
        }
        
        public bool CreateHomeFolder(string folderPath, string userPrincipalName) {
            return base.Channel.CreateHomeFolder(folderPath, userPrincipalName);
        }
        
        public System.Threading.Tasks.Task<bool> CreateHomeFolderAsync(string folderPath, string userPrincipalName) {
            return base.Channel.CreateHomeFolderAsync(folderPath, userPrincipalName);
        }
        
        public bool RemoveHomeFolderPermission(string folderPath, string identity) {
            return base.Channel.RemoveHomeFolderPermission(folderPath, identity);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveHomeFolderPermissionAsync(string folderPath, string identity) {
            return base.Channel.RemoveHomeFolderPermissionAsync(folderPath, identity);
        }
        
        public System.Data.DataTable GetMappings(int deptno) {
            return base.Channel.GetMappings(deptno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetMappingsAsync(int deptno) {
            return base.Channel.GetMappingsAsync(deptno);
        }
        
        public bool UnlockADAccount(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode) {
            return base.Channel.UnlockADAccount(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode);
        }
        
        public System.Threading.Tasks.Task<bool> UnlockADAccountAsync(string a_IdNumber, string a_DateOfBirth, string a_SsnLast4, string a_ZipCode) {
            return base.Channel.UnlockADAccountAsync(a_IdNumber, a_DateOfBirth, a_SsnLast4, a_ZipCode);
        }
        
        public System.Data.DataTable GetUserProvisioningRule(string UserID) {
            return base.Channel.GetUserProvisioningRule(UserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUserProvisioningRuleAsync(string UserID) {
            return base.Channel.GetUserProvisioningRuleAsync(UserID);
        }
        
        public System.Data.DataTable GetMembers(string GroupName) {
            return base.Channel.GetMembers(GroupName);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetMembersAsync(string GroupName) {
            return base.Channel.GetMembersAsync(GroupName);
        }
        
        public CCCS.Web.AdService.UserObject GetUserProfileByDN(string DN) {
            return base.Channel.GetUserProfileByDN(DN);
        }
        
        public System.Threading.Tasks.Task<CCCS.Web.AdService.UserObject> GetUserProfileByDNAsync(string DN) {
            return base.Channel.GetUserProfileByDNAsync(DN);
        }
        
        public CCCS.Web.AdService.UserObject GetUserProfileByUPN(string UPN) {
            return base.Channel.GetUserProfileByUPN(UPN);
        }
        
        public System.Threading.Tasks.Task<CCCS.Web.AdService.UserObject> GetUserProfileByUPNAsync(string UPN) {
            return base.Channel.GetUserProfileByUPNAsync(UPN);
        }
        
        public void AddLogEntry(string method, string message, string objectGUID, string userID, string soure, bool status) {
            base.Channel.AddLogEntry(method, message, objectGUID, userID, soure, status);
        }
        
        public System.Threading.Tasks.Task AddLogEntryAsync(string method, string message, string objectGUID, string userID, string soure, bool status) {
            return base.Channel.AddLogEntryAsync(method, message, objectGUID, userID, soure, status);
        }
    }
}

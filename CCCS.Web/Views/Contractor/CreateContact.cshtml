@model CCCS.Core.Domain.Contractors.ContractorContact

@{
    ViewBag.Title = "Create Contact";
    Layout = "~/Views/Shared/_LayoutContractor.cshtml";
}
@section Navbar {
    <ol class="breadcrumb">
        <li><a href="~/">CCCS Home</a></li>
        <li>
            <a href="~/Contractor/Index1">Contractors</a>
        </li>
        <li class="active">@ViewBag.Title</li>
    </ol>
}

<h3>@ViewBag.Title</h3>

@using (Html.BeginForm("CreateContact", "Contractor", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, null))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ContractorId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Extension, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Extension, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group mar-top-50">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                <span style="padding-left: 20px;">
                    @if (string.IsNullOrEmpty(ViewBag.ReturnUrl))
                    {
                        @Html.ActionLink("Cancel", "Details1", new { id = Model.ContractorId })
                    }
                    else
                    {
                        <a href="@ViewBag.ReturnUrl">Cancel</a>
                    }
                </span>
            </div>
        </div>
    </div>
}



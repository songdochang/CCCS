@model CCCS.Core.Domain.Contractors.Contractor

@{
    ViewBag.Title = "Edit Contractor";
    Layout = "~/Views/Shared/_LayoutContractor.cshtml";
}
@section Navbar {
    <ol class="breadcrumb">
        <li><a href="~/">CCCS Home</a></li>
        <li>
            <a href="~/Contractor/Index1">Contractors</a>
        </li>
        <li class="active">@ViewBag.Title</li>
    </ol>
}
<script type="text/javascript">
    $(function () {
        $('.date').datetimepicker({
            format: "L"
        });
    });
</script>
<h3>@ViewBag.Title</h3>

@using (Html.BeginForm("Edit", "Contractor", new { returnUrl = ViewBag.ReturnUrl }, FormMethod.Post, null))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control text-box-lg" } })
            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DCO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DcoDropDownListFor(x => x.DCO, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AlternateDCO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.DcoDropDownListFor(x => x.AlternateDCO, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateRegistered, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-2">
            <div class='input-group date'>
                @Html.EditorFor(model => model.DateRegistered, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            @Html.ValidationMessageFor(model => model.DateRegistered, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaxId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaxId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaxId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mar-top-50">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
            <span style="padding-left: 20px;">
                @if (string.IsNullOrEmpty(ViewBag.ReturnUrl))
                {
                    @Html.ActionLink("Cancel", "Details1", new { id = Model.Id })
                }
                else
                {
                    <a href="@ViewBag.ReturnUrl">Cancel</a>
                }
            </span>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

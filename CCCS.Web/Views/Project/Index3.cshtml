@model PagedList.IPagedList<CCCS.Web.Models.Projects.ProjectModel>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Projects";
}
<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip();
    })
</script>
<style>
    span.lp {
        background-color: RGB(204, 192, 218);
    }

    span.purple {
        background-color: RGB(177, 160, 199);
    }

    span.dp {
        background-color: RGB(96, 73, 122);
    }

    .sm {
        width: 45px;
    }

    .md {
        width: 60px;
    }

    .md2 {
        width: 75px;
        font-size: 0.9em;
    }

    table {
    }
</style>
<div class="pull-right mar-top-20">
    @if (User.IsInRole("Clerical") || User.IsInRole("Clerical2"))
    {
        string url = VirtualPathUtility.ToAbsolute("~/Project/Create") + "?returnUrl=" + HttpUtility.HtmlEncode(Request.Url.PathAndQuery);
        <a href="@url" class="btn btn-primary btn-sm"><span class="glyphicon glyphicon-flash mar-right-5"></span>Create new project</a>
    }
</div>
<h3>@ViewBag.Title</h3>
@{
    Html.RenderPartial("_AlertPartial");
    Html.RenderPartial("_SearchProject");
    Html.RenderPartial("_ProjectIndexTabs");
}

<div class="pull-right pad-bottom-10">
    @using (Html.BeginForm("Index3", "Project", new { sortOrder = ViewBag.SortOrder, page = Model.PageNumber }, FormMethod.Post, null))
    {
        <div class="form-inline">
            <div class="form-group mar-left-20">
                <a data-toggle="modal" href="#filterModal"><div><span class="mar-right-10 glyphicon glyphicon-filter"></span>Filter</div></a>
            </div>
        </div>
        Html.RenderPartial("_FilterModal");
    }
</div>
<label class="pull-left pad-top-7">List Total:<span class="mar-left-10">@ViewBag.Total</span></label>
@if (User.IsInRole("Administrator") || User.IsInRole("Manager"))
{
    @Html.Partial("_ProjectListAdmin")
}
else if (User.IsInRole("Clerical") || User.IsInRole("Clerical2"))
{
    @Html.Partial("_ProjectListClerical")
}
else if (User.IsInRole("DCO"))
{
    @Html.Partial("_ProjectListDCO")
}
<br />
@if (string.IsNullOrEmpty(ViewBag.SearchString))
{
    @:Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    if (ViewBag.JOC != null && ViewBag.JOC.Contains("true"))
    {
        @Html.PagedListPager(Model, page => Url.Action("Index3", new { sortOrder = ViewBag.SortOrder, co = ViewBag.CO, projectType = ViewBag.ProjectType,
            joc = "true", page, prime = ViewBag.Prime, sub = ViewBag.Sub }))
    }
    else
    {
        @Html.PagedListPager(Model, page => Url.Action("Index3", new { sortOrder = ViewBag.SortOrder, co = ViewBag.CO, projectType = ViewBag.ProjectType,
            joc = "false", page, prime = ViewBag.Prime, sub = ViewBag.Sub }))
    }
}



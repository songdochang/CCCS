@model System.Data.DataTable
@using System.Data
<style>
    th {
        text-align: center;
    }
    td {
        text-align: right;
    }
</style>
<div class="form-inline">
    <div class="form-group col-md-6">
        <table class="table table-condensed" border="1">
            <thead>
                <tr>
                    @{ Dictionary<string, decimal> totals = new Dictionary<string, decimal>(); }
                    @foreach (DataColumn col in Model.Columns)
                    {
                        totals.Add(col.ColumnName, 0.0m);
                        <th class="co-@col.ColumnName">@col.ColumnName</th>
                    }
                    <th>Total</th>
                </tr>
            </thead>
            @foreach (DataRow row in Model.Rows)
            {
                var total = 0.0m;
                <tr>
                    <td class="text-left">@row[0]</td>
                    @for (int i = 1; i < Model.Columns.Count; i++)
                    {
                        <td class="co-@Model.Columns[i].ColumnName">
                            @if (!String.IsNullOrEmpty(row[i].ToString()))
                            {
                                var val = Decimal.Parse(row[i].ToString());
                                totals[Model.Columns[i].ColumnName] += val;
                                total += val;
                                var v = val.ToString("#,###.0");
                                @v
                            }
                            else
                            {
                                @:0
                        }
                        </td>
                    }
                    <td>@total.ToString("#,###.0")</td>
                </tr>
            }
            <tfoot>
                <tr style="border-top: double;">
                    @{ decimal grandTotal = 0.0m; }
                    <td class="text-left"></td>
                    @for (int i = 1; i < Model.Columns.Count; i++)
                    {
                        grandTotal += totals[Model.Columns[i].ColumnName];
                        <td class="co-@Model.Columns[i].ColumnName">
                            @totals[Model.Columns[i].ColumnName].ToString("#.0")
                        </td>
                    }
                    <td>@grandTotal</td>
                </tr>
            </tfoot>
        </table>
    </div>
    <div class="form-group col-md-6">
        @if (grandTotal > 0.0m)
        {
            <table class="table table-condensed" border="1">
                <thead>
                    <tr>
                        @foreach (DataColumn col in Model.Columns)
                        {
                            <th class="co-@col.ColumnName">@col.ColumnName</th>
                        }
                        <th>Total</th>
                    </tr>
                </thead>
                @foreach (DataRow row in Model.Rows)
                {
                    var colTotal = 0.0m;
                    <tr>
                        <td class="text-left">@row[0]</td>
                        @for (int i = 1; i < Model.Columns.Count; i++)
                        {
                            if (!String.IsNullOrEmpty(row[i].ToString()))
                            {
                                var val = Decimal.Parse(row[i].ToString());
                                colTotal += val;
                            }
                        }
                        @for (int i = 1; i < Model.Columns.Count; i++)
                        {
                            <td class="co-@Model.Columns[i].ColumnName">
                                @if (!String.IsNullOrEmpty(row[i].ToString()))
                                {
                                    var val = Decimal.Parse(row[i].ToString()) / colTotal;
                                    var v = val.ToString("#,##0%");
                                    @v
                                }
                                else
                                {
                                    <span>0%</span>
                                }
                            </td>
                        }
                        <td>100%</td>
                    </tr>
                }
                <tfoot>
                    <tr style="border-top: double;">
                        <td class="text-left"></td>
                        @for (int i = 1; i < Model.Columns.Count; i++)
                        {
                            var percent = totals[Model.Columns[i].ColumnName] / grandTotal;
                            <td class="co-@Model.Columns[i].ColumnName">
                                @percent.ToString("#,##0%")
                            </td>
                        }
                        <td>100%</td>
                    </tr>
                </tfoot>
            </table>
        }
    </div>
</div>
<div class="form-inline">
    @foreach (DataRow row in Model.Rows)
    {
        <div class="col-md-2">
            @Html.Chart("ChartByActivity", "Report", new RouteValueDictionary(new { isBillable = ViewBag.IsBillable, activity = row[0], since = ViewBag.Since, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate }), null);
        </div>
    }
</div>
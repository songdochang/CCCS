@model CCCS.Core.Domain.Worksheets.Worksheet

@{
    ViewBag.Title = "Edit Non-Billable Activity";
}
<script type="text/javascript">
    $(function () {
        $('.date').datetimepicker({
            format: "L"
        });

        $("#Activity").change(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetActivityCodes", "Worksheet")",
                data: { id: $(this).val() },
                success: function (result) {
                    var codes = result.split(';');
                    $("#ac").html(codes[0]);
                    $("#ActivityCode").val(codes[0]);
                    $("#an").html(codes[1]);
                    $("#Unit").val(codes[1]);
                },
            error: function (req, status, error) {
                // do something with error
            }
        });        });

    });
</script>
<h3>@ViewBag.Title</h3>


@using (Html.BeginForm(new { returnUrl = ViewBag.ReturnUrl }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class = "control-label col-md-2">CO</label>
            <div class="col-md-2">
                @Html.EditorFor(model => model.DCO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
            @Html.ValidationMessageFor(model => model.DCO, "", new { @class = "text-danger" })
        </div>        
        
        <div class="form-group">
            @Html.LabelFor(model => model.WorkDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <div class='input-group date' id='dtWork'>
                    @Html.EditorFor(model => model.WorkDate, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.WorkDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="title-cell pad-top-7 col-md-2">Activity</span>
            <div class="col-md-3">
                @Html.DropDownList("Activity", new SelectList(ViewBag.Activities, "Value", "Text", Model.Activity), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <span class="title-cell pad-top-7 col-md-2">Activity Code</span>
            <div class="col-md-3 pad-top-7">
                <span id="ac">@Model.ActivityCode</span>
                @Html.HiddenFor(x => x.ActivityCode)
            </div>
        </div>

        <div class="form-group">
            <span class="title-cell pad-top-7 col-md-2">Account Number</span>
            <div class="col-md-3 pad-top-7">
                <span id="an">@Model.Unit</span>
                @Html.HiddenFor(x => x.Unit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.TextArea("Comment", new { @class = "form-control", @rows = 3 })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.Hours, new SelectList(ViewBag.HourList, "Value", "Text", Model.Hours), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Hours, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Minutes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownListFor(model => model.Minutes, new SelectList(ViewBag.MinuteList, "Value", "Text", Model.Minutes), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Minutes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mar-top-50">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @if (String.IsNullOrEmpty(ViewBag.ReturnUrl))
                {
                    <span class="mar-left-20">@Html.ActionLink("Cancel", "Index3")</span>
                }
                else
                {
                    <span class="mar-left-20"><a href="@ViewBag.ReturnUrl">Cancel</a></span>
                }
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
